#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX_SIZE 100

int stack[MAX_SIZE];
int top = -1;

int is_operator(char symbol) {
    return (symbol == '+' || symbol == '-' || symbol == '*' || symbol == '/');
}

int precedence(char op) {
    if (op == '+' || op == '-') {
        return 1;
    } else if (op == '*' || op == '/') {
        return 2;
    } else {
        return 0;
    }
}

void push(int item) {
    if (top == MAX_SIZE - 1) {
        printf("Stack Overflow\n");
        exit(1);
    }
    top++;
    stack[top] = item;
}

int pop() {
    if (top == -1) {
        printf("Stack Underflow\n");
        exit(1);
    }
    int item = stack[top];
    top--;
    return item;
}

int evaluate(char* expression) {
    int i = 0;
    char symbol = expression[i];

    while (symbol != '\0') {
        if (isdigit(symbol)) {
            int operand = symbol - '0';
            push(operand);
        } else if (is_operator(symbol)) {
            int operand2 = pop();
            int operand1 = pop();
            switch (symbol) {
                case '+':
                    push(operand1 + operand2);
                    break;
                case '-':
                    push(operand1 - operand2);
                    break;
                case '*':
                    push(operand1 * operand2);
                    break;
                case '/':
                    if (operand2 == 0) {
                        printf("Division by zero\n");
                        exit(1);
                    }
                    push(operand1 / operand2);
                    break;
            }
        }
        i++;
        symbol = expression[i];
    }

    if (top != 0) {
        printf("Invalid expression\n");
        exit(1);
    }

    return pop();
}

int main() {
    char expression[MAX_SIZE];
    printf("Enter an arithmetic expression: ");
    scanf("%s", expression);

    int result = evaluate(expression);
    printf("The result is: %d\n", result);

    return 0;
}
